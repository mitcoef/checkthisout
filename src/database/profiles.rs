//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "profiles")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub first_name: Option<String>,
    pub last_name: Option<String>,
    pub city: Option<String>,
    pub street: Option<String>,
    pub house_number: Option<String>,
    #[sea_orm(column_type = "Double", nullable)]
    pub lon: Option<f64>,
    #[sea_orm(column_type = "Double", nullable)]
    pub lat: Option<f64>,
    pub max_driving_distance: Option<i32>,
    #[sea_orm(column_type = "Double")]
    pub profile_score: f64,
    #[sea_orm(column_type = "Double")]
    pub profile_picture_score: f64,
    #[sea_orm(column_type = "Double")]
    pub profile_description_score: f64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
